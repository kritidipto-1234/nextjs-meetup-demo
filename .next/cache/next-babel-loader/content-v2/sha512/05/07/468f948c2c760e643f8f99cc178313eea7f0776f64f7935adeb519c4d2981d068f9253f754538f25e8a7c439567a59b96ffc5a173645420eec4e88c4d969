{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kritidipto/Desktop/js/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js\";\nimport MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction Meetup(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    meetup: props.meetup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://kriti:QJJEE07v0tjI4tD1@cluster0.gbmpplt.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetup-details\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://kriti:QJJEE07v0tjI4tD1@cluster0.gbmpplt.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetup-details\");\n  const meetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetup\n    } // revalidate: 10,\n\n  };\n}\nexport default Meetup;","map":{"version":3,"sources":["/Users/kritidipto/Desktop/js/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId].js"],"names":["MeetupDetail","MongoClient","ObjectId","Meetup","props","meetup","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","paths","map","m","params","meetupId","toString","fallback","getStaticProps","context","findOne","console","log"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,oCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,sBAAO,QAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,KAAK,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,CAAD,KAAQ;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACL,GAAF,CAAMQ,QAAN;AAAZ;AAAV,KAAR,CAAZ,CADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMJ,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,gBAAd,CAA1B;AACA,QAAMN,MAAM,GAAG,MAAMK,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAE,IAAIZ,QAAJ,CAAamB,QAAb;AAAP,GAA1B,CAArB;AACAd,EAAAA,MAAM,CAACS,KAAP;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADF,CAEL;;AAFK,GAAP;AAID;AAED,eAAeF,MAAf","sourcesContent":["import MeetupDetail from \"../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction Meetup(props) {\n  return <MeetupDetail meetup={props.meetup} />;\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://kriti:QJJEE07v0tjI4tD1@cluster0.gbmpplt.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetup-details\");\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    paths: meetups.map((m) => ({ params: { meetupId: m._id.toString() } })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://kriti:QJJEE07v0tjI4tD1@cluster0.gbmpplt.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetup-details\");\n  const meetup = await meetupsCollection.findOne({ _id: new ObjectId(meetupId) });\n  client.close();\n\n  console.log(meetupId);\n  return {\n    props: { meetup },\n    // revalidate: 10,\n  };\n}\n\nexport default Meetup;\n"]},"metadata":{},"sourceType":"module"}